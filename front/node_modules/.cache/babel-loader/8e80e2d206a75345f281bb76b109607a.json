{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ITLogger/frontend/src/ContextAPI/LogsAPI/LogState.js\";\nimport React, { useReducer } from 'react';\nimport LogReducer from './LogReducer';\nimport LogContext from './LogContext';\nimport axios from 'axios';\nimport { GET_LOG, ADD_LOG, DELETE_LOG, UPDATE_LOG, ERROR, SET_CURRENT, CLEAR_CURRENT, SET_LOADING, UPDATE_TECH, DELETE_TECH, SEARCH_LOG, ADD_TECH, GET_TECH, CLEAR } from '../Types';\n\nconst LogState = props => {\n  const initialState = {\n    logs: [],\n    techs: null,\n    loading: false,\n    error: null,\n    current: null\n  };\n  const [state, dispatch] = useReducer(LogReducer, initialState);\n\n  const getLogs = async () => {\n    try {\n      const res = await axios.get('/logs');\n      dispatch({\n        type: GET_LOG,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  const addLogs = async formData => {\n    try {\n      const res = await axios.post('/logs', formData);\n      dispatch({\n        type: ADD_LOG,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const getTechs = async () => {\n    try {\n      const res = await axios.get('/techs');\n      dispatch({\n        type: GET_TECH,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const clearAll = () => {\n    dispatch({\n      type: CLEAR\n    });\n  };\n\n  const setCurrent = data => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: data\n    });\n  };\n\n  const updateLogs = async formData => {\n    try {\n      const res = await axios.put(`/logs/${formData._id}`, formData);\n      dispatch({\n        type: UPDATE_LOG,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const deleteLogs = async log => {\n    try {\n      const res = await axios.delete(`/logs/${log._id}`);\n      dispatch({\n        type: DELETE_LOG,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const addTechs = async formData => {\n    try {\n      const res = await axios.post('/techs', formData);\n      dispatch({\n        type: ADD_TECH,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(LogContext.Provider, {\n    value: {\n      setLoading,\n      getLogs,\n      addLogs,\n      getTechs,\n      clearAll,\n      setCurrent,\n      updateLogs,\n      deleteLogs,\n      addTechs,\n      current: state.current,\n      error: state.error,\n      loading: state.loading,\n      logs: state.logs,\n      techs: state.techs\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default LogState;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ITLogger/frontend/src/ContextAPI/LogsAPI/LogState.js"],"names":["React","useReducer","LogReducer","LogContext","axios","GET_LOG","ADD_LOG","DELETE_LOG","UPDATE_LOG","ERROR","SET_CURRENT","CLEAR_CURRENT","SET_LOADING","UPDATE_TECH","DELETE_TECH","SEARCH_LOG","ADD_TECH","GET_TECH","CLEAR","LogState","props","initialState","logs","techs","loading","error","current","state","dispatch","getLogs","res","get","type","payload","data","err","response","msg","setLoading","addLogs","formData","post","getTechs","clearAll","setCurrent","updateLogs","put","_id","deleteLogs","log","delete","addTechs","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport LogReducer from './LogReducer';\nimport LogContext from './LogContext';\nimport axios from 'axios';\nimport {\n    GET_LOG,\n    ADD_LOG,\n    DELETE_LOG,\n    UPDATE_LOG,\n    ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    SET_LOADING,\n    UPDATE_TECH,\n    DELETE_TECH,\n    SEARCH_LOG,\n    ADD_TECH,\n    GET_TECH,\n    CLEAR\n} from '../Types';\n\nconst LogState = props => {\n    const initialState = {\n        logs: [],\n        techs: null,\n        loading: false,\n        error: null,\n        current: null\n    };\n    const [state, dispatch] = useReducer(LogReducer, initialState);\n    const getLogs = async () => {\n        try {\n            const res = await axios.get('/logs');\n            dispatch({ type: GET_LOG, payload: res.data });\n        } catch (err) {\n            dispatch({ type: ERROR, payload: err.response.data.msg });\n        }\n    };\n    const setLoading = () => {\n        dispatch({ type: SET_LOADING });\n    };\n    const addLogs = async formData => {\n        try {\n            const res = await axios.post('/logs', formData);\n            dispatch({ type: ADD_LOG, payload: res.data });\n        } catch (err) {\n            dispatch({ type: ERROR, payload: err.response.data.msg });\n        }\n    };\n    const getTechs = async () => {\n        try {\n            const res = await axios.get('/techs');\n            dispatch({ type: GET_TECH, payload: res.data });\n        } catch (err) {\n            dispatch({ type: ERROR, payload: err.response.data.msg });\n        }\n    };\n    const clearAll = () => {\n        dispatch({ type: CLEAR });\n    };\n    const setCurrent = data => {\n        dispatch({ type: SET_CURRENT, payload: data });\n    };\n    const updateLogs = async formData => {\n        try {\n            const res = await axios.put(`/logs/${formData._id}`, formData);\n            dispatch({ type: UPDATE_LOG, payload: res.data });\n        } catch (err) {\n            dispatch({ type: ERROR, payload: err.response.data.msg });\n        }\n    };\n    const deleteLogs = async log => {\n        try {\n            const res = await axios.delete(`/logs/${log._id}`);\n            dispatch({ type: DELETE_LOG, payload: res.data });\n        } catch (err) {\n            dispatch({ type: ERROR, payload: err.response.data.msg });\n        }\n    };\n    const addTechs = async formData => {\n        try {\n            const res = await axios.post('/techs', formData);\n            dispatch({ type: ADD_TECH, payload: res.data });\n        } catch (err) {\n            dispatch({ type: ERROR, payload: err.response.data.msg });\n        }\n    };\n    return (\n        <LogContext.Provider\n            value={{\n                setLoading,\n                getLogs,\n                addLogs,\n                getTechs,\n                clearAll,\n                setCurrent,\n                updateLogs,\n                deleteLogs,\n                addTechs,\n                current: state.current,\n                error: state.error,\n                loading: state.loading,\n                logs: state.logs,\n                techs: state.techs\n            }}\n        >\n            {props.children}\n        </LogContext.Provider>\n    );\n};\n\nexport default LogState;\n"]},"metadata":{},"sourceType":"module"}