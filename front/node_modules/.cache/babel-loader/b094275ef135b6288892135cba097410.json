{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ITLogger/frontend/src/Components/Logs.js\";\nimport React, { useEffect, useContext } from 'react';\nimport LogItem from './LogItem';\nimport logContext from '../ContextAPI/LogsAPI/LogContext';\n\nconst Logs = () => {\n  const context = useContext(logContext);\n  const {\n    loading,\n    addLogs,\n    getLogs,\n    setLoading,\n    deleteLogs,\n    logs\n  } = context;\n  useEffect(() => {\n    setLoading();\n    getLogs();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preloader-wrapper big active\",\n      style: {\n        margin: ' 300px 450px 700px 950px '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-layer spinner-blue-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle-clipper left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gap-patch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle-clipper right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"collection with-header container\",\n    style: {\n      marginTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"collection-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"System Logs\")), !loading && logs.length === 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"No logs to show...\") : logs.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    log: log,\n    key: log._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }\n  }))));\n};\n\nexport default Logs;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ITLogger/frontend/src/Components/Logs.js"],"names":["React","useEffect","useContext","LogItem","logContext","Logs","context","loading","addLogs","getLogs","setLoading","deleteLogs","logs","margin","marginTop","length","map","log","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,OAAO,GAAGJ,UAAU,CAACE,UAAD,CAA1B;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,UAA7B;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA;AAArD,MAA8DN,OAApE;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACVD,IAAAA,OAAO;AACV,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,OAAJ,EAAa;AACT,wBACI;AACI,MAAA,SAAS,EAAC,8BADd;AAEI,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAJJ,CADJ;AAkBH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,kCADd;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAJJ,EAOK,CAACP,OAAD,IAAYK,IAAI,CAACG,MAAL,KAAgB,CAA5B,gBACG;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAGGH,IAAI,CAACI,GAAL,CAASC,GAAG,iBAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAVR,CADJ,CADJ;AAiBH,CA7CD;;AA+CA,eAAeb,IAAf","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport LogItem from './LogItem';\n\nimport logContext from '../ContextAPI/LogsAPI/LogContext';\n\nconst Logs = () => {\n    const context = useContext(logContext);\n    const { loading, addLogs, getLogs, setLoading, deleteLogs, logs } = context;\n    useEffect(() => {\n        setLoading();\n        getLogs();\n    }, []);\n\n    if (loading) {\n        return (\n            <div\n                className='preloader-wrapper big active'\n                style={{ margin: ' 300px 450px 700px 950px ' }}\n            >\n                <div className='spinner-layer spinner-blue-only'>\n                    <div className='circle-clipper left'>\n                        <div className='circle'></div>\n                    </div>\n                    <div className='gap-patch'>\n                        <div className='circle'></div>\n                    </div>\n                    <div className='circle-clipper right'>\n                        <div className='circle'></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <ul\n                className='collection with-header container'\n                style={{ marginTop: '30px' }}\n            >\n                <li className='collection-header'>\n                    <h4 className='center'>System Logs</h4>\n                </li>\n                {!loading && logs.length === 0 ? (\n                    <h3 className='center'>No logs to show...</h3>\n                ) : (\n                    logs.map(log => <LogItem log={log} key={log._id} />)\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Logs;\n"]},"metadata":{},"sourceType":"module"}