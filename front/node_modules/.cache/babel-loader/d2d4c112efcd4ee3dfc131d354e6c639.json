{"ast":null,"code":"import _toConsumableArray from\"/home/abdul/Documents/Reactprog/ITLogger/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/abdul/Documents/Reactprog/ITLogger/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_LOG,ADD_LOG,DELETE_LOG,UPDATE_LOG,ERROR,SET_CURRENT,SET_LOADING,DELETE_TECH,SEARCH_LOG,ADD_TECH,GET_TECH,CLEAR}from'../Types';var LogReducer=function LogReducer(state,action){switch(action.type){default:return state;case GET_LOG:return _objectSpread({},state,{logs:action.payload,loading:false});case ERROR:return _objectSpread({},state,{error:action.payload});case SET_LOADING:{return _objectSpread({},state,{loading:true});}case ADD_LOG:{return _objectSpread({},state,{logs:[].concat(_toConsumableArray(state.logs),[action.payload])});}case GET_TECH:{return _objectSpread({},state,{techs:action.payload});}case CLEAR:{return _objectSpread({},state,{error:null,current:null,loading:false,filter:null});}case SET_CURRENT:{return _objectSpread({},state,{current:action.payload});}case UPDATE_LOG:{return _objectSpread({},state,{logs:state.logs.map(function(log){return log._id===action.payload._id?action.payload:log;})});}case DELETE_LOG:{return _objectSpread({},state,{logs:state.logs.filter(function(log){return log._id!==action.payload._id;})});}case ADD_TECH:{return _objectSpread({},state,{techs:[].concat(_toConsumableArray(state.techs),[action.payload])});}case DELETE_TECH:{return _objectSpread({},state,{techs:state.techs.filter(function(tech){return tech._id!==action.payload._id;})});}case SEARCH_LOG:{return _objectSpread({},state,{filter:state.logs.filter(function(log){var regex=new RegExp(\"\".concat(action.payload),'gi');return log.message.match(regex)||log.tech.match(regex);})});}}};export default LogReducer;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ITLogger/frontend/src/ContextAPI/LogsAPI/LogReducer.js"],"names":["GET_LOG","ADD_LOG","DELETE_LOG","UPDATE_LOG","ERROR","SET_CURRENT","SET_LOADING","DELETE_TECH","SEARCH_LOG","ADD_TECH","GET_TECH","CLEAR","LogReducer","state","action","type","logs","payload","loading","error","techs","current","filter","map","log","_id","tech","regex","RegExp","message","match"],"mappings":"+QAAA,OACIA,OADJ,CAEIC,OAFJ,CAGIC,UAHJ,CAIIC,UAJJ,CAKIC,KALJ,CAMIC,WANJ,CAOIC,WAPJ,CAQIC,WARJ,CASIC,UATJ,CAUIC,QAVJ,CAWIC,QAXJ,CAYIC,KAZJ,KAaO,UAbP,CAeA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAClC,OAAQA,MAAM,CAACC,IAAf,EACI,QACI,MAAOF,CAAAA,KAAP,CACJ,IAAKb,CAAAA,OAAL,CACI,wBACOa,KADP,EAEIG,IAAI,CAAEF,MAAM,CAACG,OAFjB,CAGIC,OAAO,CAAE,KAHb,GAKJ,IAAKd,CAAAA,KAAL,CACI,wBACOS,KADP,EAEIM,KAAK,CAAEL,MAAM,CAACG,OAFlB,GAIJ,IAAKX,CAAAA,WAAL,CAAkB,CACd,wBACOO,KADP,EAEIK,OAAO,CAAE,IAFb,GAIH,CACD,IAAKjB,CAAAA,OAAL,CAAc,CACV,wBACOY,KADP,EAEIG,IAAI,8BAAMH,KAAK,CAACG,IAAZ,GAAkBF,MAAM,CAACG,OAAzB,EAFR,GAIH,CACD,IAAKP,CAAAA,QAAL,CAAe,CACX,wBACOG,KADP,EAEIO,KAAK,CAAEN,MAAM,CAACG,OAFlB,GAIH,CACD,IAAKN,CAAAA,KAAL,CAAY,CACR,wBACOE,KADP,EAEIM,KAAK,CAAE,IAFX,CAGIE,OAAO,CAAE,IAHb,CAIIH,OAAO,CAAE,KAJb,CAKII,MAAM,CAAE,IALZ,GAOH,CACD,IAAKjB,CAAAA,WAAL,CAAkB,CACd,wBACOQ,KADP,EAEIQ,OAAO,CAAEP,MAAM,CAACG,OAFpB,GAIH,CACD,IAAKd,CAAAA,UAAL,CAAiB,CACb,wBACOU,KADP,EAEIG,IAAI,CAAEH,KAAK,CAACG,IAAN,CAAWO,GAAX,CAAe,SAAAC,GAAG,QACpBA,CAAAA,GAAG,CAACC,GAAJ,GAAYX,MAAM,CAACG,OAAP,CAAeQ,GAA3B,CAAiCX,MAAM,CAACG,OAAxC,CAAkDO,GAD9B,EAAlB,CAFV,GAMH,CACD,IAAKtB,CAAAA,UAAL,CAAiB,CACb,wBACOW,KADP,EAEIG,IAAI,CAAEH,KAAK,CAACG,IAAN,CAAWM,MAAX,CAAkB,SAAAE,GAAG,QAAIA,CAAAA,GAAG,CAACC,GAAJ,GAAYX,MAAM,CAACG,OAAP,CAAeQ,GAA/B,EAArB,CAFV,GAIH,CACD,IAAKhB,CAAAA,QAAL,CAAe,CACX,wBACOI,KADP,EAEIO,KAAK,8BAAMP,KAAK,CAACO,KAAZ,GAAmBN,MAAM,CAACG,OAA1B,EAFT,GAIH,CACD,IAAKV,CAAAA,WAAL,CAAkB,CACd,wBACOM,KADP,EAEIO,KAAK,CAAEP,KAAK,CAACO,KAAN,CAAYE,MAAZ,CACH,SAAAI,IAAI,QAAIA,CAAAA,IAAI,CAACD,GAAL,GAAaX,MAAM,CAACG,OAAP,CAAeQ,GAAhC,EADD,CAFX,GAMH,CACD,IAAKjB,CAAAA,UAAL,CAAiB,CACb,wBACOK,KADP,EAEIS,MAAM,CAAET,KAAK,CAACG,IAAN,CAAWM,MAAX,CAAkB,SAAAE,GAAG,CAAI,CAC7B,GAAMG,CAAAA,KAAK,CAAG,GAAIC,CAAAA,MAAJ,WAAcd,MAAM,CAACG,OAArB,EAAgC,IAAhC,CAAd,CACA,MAAOO,CAAAA,GAAG,CAACK,OAAJ,CAAYC,KAAZ,CAAkBH,KAAlB,GAA4BH,GAAG,CAACE,IAAJ,CAASI,KAAT,CAAeH,KAAf,CAAnC,CACH,CAHO,CAFZ,GAOH,CAnFL,CAqFH,CAtFD,CAwFA,cAAef,CAAAA,UAAf","sourcesContent":["import {\n    GET_LOG,\n    ADD_LOG,\n    DELETE_LOG,\n    UPDATE_LOG,\n    ERROR,\n    SET_CURRENT,\n    SET_LOADING,\n    DELETE_TECH,\n    SEARCH_LOG,\n    ADD_TECH,\n    GET_TECH,\n    CLEAR\n} from '../Types';\n\nconst LogReducer = (state, action) => {\n    switch (action.type) {\n        default:\n            return state;\n        case GET_LOG:\n            return {\n                ...state,\n                logs: action.payload,\n                loading: false\n            };\n        case ERROR:\n            return {\n                ...state,\n                error: action.payload\n            };\n        case SET_LOADING: {\n            return {\n                ...state,\n                loading: true\n            };\n        }\n        case ADD_LOG: {\n            return {\n                ...state,\n                logs: [...state.logs, action.payload]\n            };\n        }\n        case GET_TECH: {\n            return {\n                ...state,\n                techs: action.payload\n            };\n        }\n        case CLEAR: {\n            return {\n                ...state,\n                error: null,\n                current: null,\n                loading: false,\n                filter: null\n            };\n        }\n        case SET_CURRENT: {\n            return {\n                ...state,\n                current: action.payload\n            };\n        }\n        case UPDATE_LOG: {\n            return {\n                ...state,\n                logs: state.logs.map(log =>\n                    log._id === action.payload._id ? action.payload : log\n                )\n            };\n        }\n        case DELETE_LOG: {\n            return {\n                ...state,\n                logs: state.logs.filter(log => log._id !== action.payload._id)\n            };\n        }\n        case ADD_TECH: {\n            return {\n                ...state,\n                techs: [...state.techs, action.payload]\n            };\n        }\n        case DELETE_TECH: {\n            return {\n                ...state,\n                techs: state.techs.filter(\n                    tech => tech._id !== action.payload._id\n                )\n            };\n        }\n        case SEARCH_LOG: {\n            return {\n                ...state,\n                filter: state.logs.filter(log => {\n                    const regex = new RegExp(`${action.payload}`, 'gi');\n                    return log.message.match(regex) || log.tech.match(regex);\n                })\n            };\n        }\n    }\n};\n\nexport default LogReducer;\n"]},"metadata":{},"sourceType":"module"}