{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ITLogger/frontend/src/ContextAPI/LogsAPI/LogState.js\";\nimport React, { useReducer } from 'react';\nimport LogReducer from './LogReducer';\nimport LogContext from './LogContext';\nimport axios from 'axios';\nimport { GET_LOG, ADD_LOG, DELETE_LOG, UPDATE_LOG, ERROR, SET_CURRENT, CLEAR_CURRENT, SET_LOADING, UPDATE_TECH, DELETE_TECH, SEARCH_LOG, ADD_TECH, GET_TECH, CLEAR_LOG } from '../Types';\n\nconst LogState = props => {\n  const initialState = {\n    logs: [],\n    tech: null,\n    current: null,\n    loading: false,\n    error: null\n  };\n  const [state, dispatch] = useReducer(LogReducer, initialState);\n\n  const getLogs = async () => {\n    try {\n      const res = await axios.get('/logs');\n      dispatch({\n        type: GET_LOG,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const setLoading = () => {\n    dispatch({\n      type: SET_LOADING\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(LogContext.Provider, {\n    value: {\n      setLoading,\n      getLogs,\n      current: state.current,\n      error: state.error,\n      loading: state.loading,\n      logs: state.logs,\n      tech: state.tech\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default LogState;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ITLogger/frontend/src/ContextAPI/LogsAPI/LogState.js"],"names":["React","useReducer","LogReducer","LogContext","axios","GET_LOG","ADD_LOG","DELETE_LOG","UPDATE_LOG","ERROR","SET_CURRENT","CLEAR_CURRENT","SET_LOADING","UPDATE_TECH","DELETE_TECH","SEARCH_LOG","ADD_TECH","GET_TECH","CLEAR_LOG","LogState","props","initialState","logs","tech","current","loading","error","state","dispatch","getLogs","res","get","type","payload","data","err","response","msg","setLoading","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,OADJ,EAEIC,OAFJ,EAGIC,UAHJ,EAIIC,UAJJ,EAKIC,KALJ,EAMIC,WANJ,EAOIC,aAPJ,EAQIC,WARJ,EASIC,WATJ,EAUIC,WAVJ,EAWIC,UAXJ,EAYIC,QAZJ,EAaIC,QAbJ,EAcIC,SAdJ,QAeO,UAfP;;AAiBA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,IAAI,EAAE,EADW;AAEjBC,IAAAA,IAAI,EAAE,IAFW;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,OAAO,EAAE,KAJQ;AAKjBC,IAAAA,KAAK,EAAE;AALU,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,UAAU,CAACC,UAAD,EAAamB,YAAb,CAApC;;AACA,QAAMQ,OAAO,GAAG,YAAY;AACxB,QAAI;AACA,YAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAU,OAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE3B,OAAR;AAAiB4B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAA9B,OAAD,CAAR;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVP,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEvB,KAAR;AAAewB,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAA1C,OAAD,CAAR;AACH;AACJ,GAPD;;AAQA,QAAMC,UAAU,GAAG,MAAM;AACrBV,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEpB;AAAR,KAAD,CAAR;AACH,GAFD;;AAGA,sBACI,oBAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AACH0B,MAAAA,UADG;AAEHT,MAAAA,OAFG;AAGHL,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHZ;AAIHE,MAAAA,KAAK,EAAEC,KAAK,CAACD,KAJV;AAKHD,MAAAA,OAAO,EAAEE,KAAK,CAACF,OALZ;AAMHH,MAAAA,IAAI,EAAEK,KAAK,CAACL,IANT;AAOHC,MAAAA,IAAI,EAAEI,KAAK,CAACJ;AAPT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWKH,KAAK,CAACmB,QAXX,CADJ;AAeH,CAnCD;;AAqCA,eAAepB,QAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport LogReducer from './LogReducer';\nimport LogContext from './LogContext';\nimport axios from 'axios';\nimport {\n    GET_LOG,\n    ADD_LOG,\n    DELETE_LOG,\n    UPDATE_LOG,\n    ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    SET_LOADING,\n    UPDATE_TECH,\n    DELETE_TECH,\n    SEARCH_LOG,\n    ADD_TECH,\n    GET_TECH,\n    CLEAR_LOG\n} from '../Types';\n\nconst LogState = props => {\n    const initialState = {\n        logs: [],\n        tech: null,\n        current: null,\n        loading: false,\n        error: null\n    };\n    const [state, dispatch] = useReducer(LogReducer, initialState);\n    const getLogs = async () => {\n        try {\n            const res = await axios.get('/logs');\n            dispatch({ type: GET_LOG, payload: res.data });\n        } catch (err) {\n            dispatch({ type: ERROR, payload: err.response.data.msg });\n        }\n    };\n    const setLoading = () => {\n        dispatch({ type: SET_LOADING });\n    };\n    return (\n        <LogContext.Provider\n            value={{\n                setLoading,\n                getLogs,\n                current: state.current,\n                error: state.error,\n                loading: state.loading,\n                logs: state.logs,\n                tech: state.tech\n            }}\n        >\n            {props.children}\n        </LogContext.Provider>\n    );\n};\n\nexport default LogState;\n"]},"metadata":{},"sourceType":"module"}