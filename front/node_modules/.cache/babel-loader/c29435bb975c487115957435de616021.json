{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ITLogger/frontend/src/Components/Logs.js\";\nimport React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem';\n\nconst Logs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getLogs = async () => {\n    const res = await fetch('/logs');\n    const data = await res.json();\n    setLogs(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getLogs(); //eslint disable-next-line\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preloader-wrapper big active\",\n      style: {\n        margin: ' 300px 450px 700px 950px '\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-layer spinner-blue-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle-clipper left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gap-patch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle-clipper right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"collection with-header container\",\n    style: {\n      marginTop: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"collection-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"System Logs\")), !loading && logs.length === 0 ? /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"No logs to show...\") : logs.map(log => /*#__PURE__*/React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }\n  }))));\n};\n\nexport default Logs;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ITLogger/frontend/src/Components/Logs.js"],"names":["React","useState","useEffect","LogItem","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","margin","marginTop","length","map","log","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMQ,OAAO,GAAG,YAAY;AACxB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALD;;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,GADK,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAIA,MAAIF,OAAJ,EAAa;AACT,wBACI;AACI,MAAA,SAAS,EAAC,8BADd;AAEI,MAAA,KAAK,EAAE;AAAEO,QAAAA,MAAM,EAAE;AAAV,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,eAOI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAJJ,CADJ;AAkBH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,kCADd;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAJJ,EAOK,CAACR,OAAD,IAAYF,IAAI,CAACW,MAAL,KAAgB,CAA5B,gBACG;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADH,GAGGX,IAAI,CAACY,GAAL,CAASC,GAAG,iBAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAVR,CADJ,CADJ;AAiBH,CAlDD;;AAoDA,eAAef,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem';\n\nconst Logs = () => {\n    const [logs, setLogs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const getLogs = async () => {\n        const res = await fetch('/logs');\n        const data = await res.json();\n        setLogs(data);\n        setLoading(false);\n    };\n    useEffect(() => {\n        getLogs();\n        //eslint disable-next-line\n    }, []);\n    if (loading) {\n        return (\n            <div\n                className='preloader-wrapper big active'\n                style={{ margin: ' 300px 450px 700px 950px ' }}\n            >\n                <div className='spinner-layer spinner-blue-only'>\n                    <div className='circle-clipper left'>\n                        <div className='circle'></div>\n                    </div>\n                    <div className='gap-patch'>\n                        <div className='circle'></div>\n                    </div>\n                    <div className='circle-clipper right'>\n                        <div className='circle'></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <ul\n                className='collection with-header container'\n                style={{ marginTop: '30px' }}\n            >\n                <li className='collection-header'>\n                    <h4 className='center'>System Logs</h4>\n                </li>\n                {!loading && logs.length === 0 ? (\n                    <h3 className='center'>No logs to show...</h3>\n                ) : (\n                    logs.map(log => <LogItem log={log} key={log.id} />)\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default Logs;\n"]},"metadata":{},"sourceType":"module"}